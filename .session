;;; Automatically generated on Thu May 15 02:22:40 2014
;;; Invoked by crane@Crane-Linux using 24.3.1
(setq-default kill-ring '(#("(require 'mode-line-)" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 8 (face font-lock-keyword-face fontified t) 8 10 (fontified t) 10 20 (face font-lock-constant-face fontified t) 20 21 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t)) #("(require 'mode-line)" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 8 (face font-lock-keyword-face fontified t) 8 10 (fontified t) 10 19 (face font-lock-constant-face fontified t) 19 20 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t)) #("line-awesome" 0 5 (fontified t face font-lock-constant-face) 5 12 (fontified t face font-lock-constant-face))))
(setq-default session-file-alist '(("~/.emacs.d/init.el" 4626 5039 1 nil nil 4626 (overwrite-mode)) ("~/.emacs.d/mode-line-awesome.el" 188 1 1 nil nil 187 (overwrite-mode)) ("~/.emacs.d/diminish.el" 12745 1 1 nil nil 14647 (overwrite-mode)) ("~/resumes/应聘Android开发工程师岗位_黄仁鹤_华中科技大学_15527838254.txt" 1135 1092 1 nil nil 1134 (overwrite-mode)) ("~/.emacs.d/emdroid.el" 2363 2325 1 nil nil 2363 (overwrite-mode)) ("~/.emacs.d/java-mode-indent-annotations.el" 5415 1 1 nil nil 1075 (overwrite-mode)) ("~/android-pro/src/com/crane/hello/Hello.java" 485 485 1 nil nil 111 (overwrite-mode)) ("~/android-pro/res/layout/main.xml" 270 432 1 nil nil 270 (overwrite-mode)) ("~/.emacs.d/elpa/android-mode-0.2.5/android-mode.el" 2853 nil 1 nil nil 2788 (overwrite-mode)) ("~/.emacs.d/elpa/ecb-snapshot-20120830/ecb-snapshot-autoloads.el" 2686 nil 1 nil nil 2686 (overwrite-mode)) ("~/.emacs.d/elpa/ecb-2.40/ecb-autoloads.el" 2492 nil 1 nil nil 2492 (overwrite-mode)) ("~/codes/shellscript/exeone.sh" 216 nil 1 nil nil 216 (overwrite-mode)) ("~/codes/shellscript/one.sh" 411 85 1 nil nil 411 (overwrite-mode)) ("~/codes/shellscript/helloworld.sh" 120 33 1 nil nil 120 (overwrite-mode)) ("~/codes/c-code/ConstMethod.cpp" 360 360 1 nil nil 363 (overwrite-mode)) ("~/.emacs.d/init-gnus.el" 1874 1289 1 nil nil 1268 (overwrite-mode)) ("~/codes/shellscript/network.sh" 221 222 1 nil nil 221 (overwrite-mode)) ("~/.authinfo.gpg" 123 1 1 nil nil 123 (overwrite-mode)) ("~/codes/shellscript/policykit.sh" 601 487 1 nil nil 601 (overwrite-mode)) ("~/.emacs-places" 27 nil 1 nil nil 27 (overwrite-mode)) ("~/codes/shellscript/exmaple.js" 239 1 1 nil nil 239 (overwrite-mode)) ("~/codes/pythoncodes/helloworld.py" 78 nil 1 nil nil 78 (overwrite-mode)) ("~/.emacs.d/elpa/github-browse-file-0.3.0/github-browse-file-autoloads.el" 1114 nil 1 nil nil 1114 (overwrite-mode)) ("~/.emacs.d/elpa/w3m-20140420.2007/w3m-autoloads.el" 19239 nil 1 nil nil 19239 (overwrite-mode)) ("~/android-pro/HelloWorld/src/com/crane/helloworld/helloWorld.java" 386 368 1 nil nil 386 (overwrite-mode)) ("~/android-pro/HelloWorld/res/layout/main.xml" 487 nil 1 nil nil 487 (overwrite-mode)) ("~/android-pro/HelloWorld.java" 3 nil 1 nil nil 3 (overwrite-mode)) ("~/codes/c-code/consttest.cpp" 397 nil 1 nil nil 397 (overwrite-mode)) ("~/codes/c-code/AnimalManager.cpp" 2263 2170 1 nil nil 2170 (overwrite-mode)) ("~/codes/c-code/ArgsInMain.cpp" 322 nil 1 nil nil 322 (overwrite-mode)) ("~/codes/c-code/justtest.cpp" 854 nil 1 nil nil 854 (overwrite-mode)) ("~/codes/javacodes/ObjectTest.java" 184 220 1 nil nil 184 (overwrite-mode)) ("~/.emacs.d/elpa/emacs-droid-0.0.0/emacs-droid-autoloads.el" 341 nil 1 nil nil 341 (overwrite-mode)) ("~/.emacs.d/elpa/android-mode-0.2.5/android-mode-autoloads.el" 452 nil 1 nil nil 452 (overwrite-mode)) ("~/codes/c-code/io/iosecond.cpp" 119 nil 1 nil nil 119 (overwrite-mode)) ("~/codes/c-code/io/ioone.cpp" 160 211 1 nil nil 126 (overwrite-mode)) ("~/.emacs.d/README.org" 8537 nil 1 nil nil 8537 (overwrite-mode)) ("~/codes/c-code/virtualcon.cpp" 155 nil 1 nil nil 155 (overwrite-mode)) ("~/android_4.0/download.sh" 163 1 1 nil nil 163 (overwrite-mode)) ("~/codes/c-code/extends.cpp" 655 557 1 nil nil 557 (overwrite-mode)) ("~/codes/c-code/Rational.cpp" 342 nil 1 nil nil 342 (overwrite-mode)) ("~/codes/c-code/new.cpp" 488 170 1 nil nil 488 (overwrite-mode)) ("~/codes/c-code/childobject.cpp" 437 437 1 nil nil 436 (overwrite-mode)) ("~/codes/c-code/constmemeber.cpp" 327 159 1 nil nil 326 (overwrite-mode)) ("~/codes/c-code/input.cpp" 467 60 1 nil nil 467 (overwrite-mode)) ("~/codes/c-code/this.cpp" 346 nil 1 nil nil 346 (overwrite-mode)) ("~/codes/c-code/helloworld.cpp" 344 nil 1 nil nil 344 (overwrite-mode)) ("~/codes/c-code/pointer.cpp" 319 215 1 nil nil 252 (overwrite-mode)) ("~/codes/c-code/friendclass.cpp" 444 586 1 nil nil 586 (overwrite-mode)) ("~/codes/c-code/objectLife.cpp" 536 536 1 nil nil 150 (overwrite-mode)) ("~/codes/c-code/friendTest.cpp" 391 nil 1 nil nil 391 (overwrite-mode)) ("~/codes/c-code/test.c" 675 91 1 nil nil 675 (overwrite-mode)) ("~/codes/c-code/time.c" 188 5 1 nil nil 193 (overwrite-mode)) ("~/codes/javacodes/FirstJava.java" 663 278 1 nil nil 660 (overwrite-mode)) ("~/codes/c-code/fork.c" 211 nil 1 nil nil 211 (overwrite-mode)) ("~/.emacs.keyfreq" 1 nil 1 nil nil 1 (overwrite-mode)) ("~/codes/c-code/fork" 5182 1337 1 nil nil 5182 (overwrite-mode)) ("~/CodeLife/FirstJava.java" 846 802 1 nil nil 816 (overwrite-mode))))
(setq-default file-name-history '("~/.emacs.d/init.el" "/home/crane/.emacs.d/mode-line-awesome.el" "/home/crane/.emacs.d/diminish.el" "/home/crane/.emacs.d/init.el" "/home/crane/.emacs.d/init-modeline.el" "~/.emacs.d/diminish.el" "/home/crane/resumes/应聘Android开发工程师岗位_黄仁鹤_华中科技大学_15527838254.txt" "~/.emacs.d/emdroid.el" "/home/crane/.emacs.d/emdroid.el" "/home/crane/android-pro/src/com/crane/hello/Hello.java" "/home/crane/.emacs.d/elpa/android-mode-0.2.5/android-mode.el" "~/AndroidSDK/android-sdk-linux/tools/ant/build.xml" "~/android-pro/src/com/crane/hello/Hello.java" "/home/crane/.emacs.d/java-mode-indent-annotations.el" "/home/crane/android-pro/res/layout/main.xml" "/home/crane/workspace/oschina-android-app/src/net/oschina/app/AppConfig.java" "/home/crane/.emacs.d/init-git.el" "~/MyProject/Readme.txt" "~/.emacs.d/init-smex.el" "~/.emacs.d/init-textile.el" "~/.emacs.d/elpa/ecb-snapshot-20120830/ecb-snapshot-autoloads.el" "~/.emacs.d/elpa/ecb-2.40/ecb-autoloads.el" "/home/crane/codes/shellscript/exeone.sh" "/home/crane/codes/shellscript/one.sh" "~/codes/shellscript/helloworld.sh" "/home/crane/codes/c-code/ConstMethod.cpp" "/home/crane/.emacs.d/init-gnus.el" "/home/crane/codes/shellscript/network.sh" "/home/crane/codes/shellscript/exmaple.js" "/home/crane/.authinfo.gpg" "/home/crane/.emacs.d/init-gud.el" "/home/crane/codes/shellscript/policykit.sh" "/home/crane/codes/shellscript/helloworld.sh" "~/.emacs.d/init-emacs-w3m.el" "/home/crane/.emacs-places" "/home/crane/codes/shellscript/firstshell.sh" "/home/crane/JNI.pdf" "/home/crane/codes/pythoncodes/helloworld.py" "~/.emacs.d/elpa/github-browse-file-0.3.0/github-browse-file-autoloads.el" "~/.emacs.d/elpa/w3m-20140420.2007/w3m-autoloads.el" "/home/crane/.emacs.d/init-web-mode.el" "/home/crane/android-pro/HelloWorld/res/layout/main.xml" "/home/crane/android-pro/HelloWorld/src/com/crane/helloworld/helloWorld.java" "/home/crane/android-pro/HelloWorld.java" "/home/crane/.emacs" "~/.emacs.d/elpa/emacs-droid-0.0.0/emacs-droid-autoloads.el" "~/.emacs.d/elpa/android-mode-0.2.5/android-mode-autoloads.el" "/home/crane/codes/c-code/consttest.cpp" "/home/crane/codes/c-code/AnimalManager.cpp" "/home/crane/codes/c-code/ArgsInMain.cpp" "/home/crane/codes/javacodes/ObjectTest.java" "/home/crane/codes/javacodes/FirstJava.java" "/home/crane/codes/c-code/justtest.cpp" "/home/crane/codes/c-code/io/iosecond.cpp" "/home/crane/codes/c-code/io/ioone.cpp" "/home/crane/.emacs.d/README.org" "/home/crane/codes/c-code/virtualcon.cpp" "/home/crane/codes/c-code/virtualTest.cpp" "~/android_4.1/Android41/Makefile" "/etc/hosts" "/home/crane/android_4.0/download.sh" "/home/crane/codes/c-code/extends.cpp" "/home/crane/codes/c-code/Rational.cpp" "/home/crane/codes/c-code/new.cpp" "/home/crane/codes/c-code/childobject.cpp" "/home/crane/codes/c-code/constmemeber.cpp" "/home/crane/codes/c-code/input.cpp" "/home/crane/codes/c-code/helloworld.cpp" "/home/crane/codes/c-code/this.cpp" "/home/crane/codes/c-code/pointer.cpp" "/home/crane/codes/c-code/friendclass.cpp" "/home/crane/codes/c-code/friendclass.out" "/home/crane/codes/c-code/fork" "/home/crane/codes/c-code/objectLife.cpp" "/home/crane/codes/c-code/objectLife.out" "/home/crane/codes/c-code/friendTest.cpp" "/home/crane/codes/c-code/friendTest.out" "/home/crane/codes/c-code/fork.c" "/home/crane/codes/c-code/test.c" "/home/crane/codes/c-code/test.out" "/home/crane/codes/c-code/test" "~/codes/c-code/test.c" "/home/crane/codes/c-code/time.c" "~/codes/c-code/fork.c" "~/codes/c-code/time" "~/codes/javacodes/FirstJava.java" "/usr/share/emacs/24.3/etc/ORDERS" "~/resumes/应聘Android客户端开发工程师岗位_黄仁鹤_华中科技大学_15527838254.pdf" "~/codes/javacodes/FisstJava.java" "~/.android/sites-settings.cfg" "~/codes/javacodes/#FisstJava.java#" "/home/crane/codes/javacodes/FisstJava.java" "/home/crane/.emacs.keyfreq" "info~/" "/home/crane/CodeLife/FirstJava.java" "~/.emacs.d/snippets/java-mode/hello_world.yasnippet" "/home/crane/CodeLife/newone"))
(setq-default buffer-name-history '("network.sh" "policykit.sh" "crane" "node" "justtest.cpp" "time.c"))
(setq-default command-history '((eshell nil) (execute-extended-command nil "eshell") (find-file "/home/crane/.emacs.d/mode-line-awesome.el") (find-file "/home/crane/.emacs.d/diminish.el") (diminish (quote rainbow-delimiters-mode) "V") (execute-extended-command nil "diminish") (find-file "/home/crane/.emacs.d/init.el") (find-file "/home/crane/.emacs.d/init-modeline.el") (list-packages nil) (execute-extended-command nil "list-packages") (load-file "/home/crane/.emacs.d/diminish.el") (execute-extended-command nil "load-file") (find-file "/home/crane/resumes/应聘Android开发工程师岗位_黄仁鹤_华中科技大学_15527838254.txt") (emdroid-create-activity "Hello") (execute-extended-command nil "emdroid-create-activity") (load-file "/home/crane/.emacs.d/emdroid.el") (find-file "/home/crane/.emacs.d/emdroid.el") (find-file "/home/crane/android-pro/src/com/crane/hello/Hello.java") (emdroid-create-activity "hello") (emdroid-create-activity "Crane") (emdroid-create-activity "HelloWorld") (ibuffer-find-file "/home/crane/.emacs.d/init.el" t) (find-file "/home/crane/.emacs.d/elpa/android-mode-0.2.5/android-mode.el") (paredit-escape 127) (android-ant-installd) (execute-extended-command nil "android-ant-installd") (android-ant "debug install") (execute-extended-command nil "android-ant") (find-file "/home/crane/.emacs.d/java-mode-indent-annotations.el") (android-start-emulator) (execute-extended-command nil "android-start-emulator") (find-file "/home/crane/android-pro/res/layout/main.xml") (android-create-project "/home/crane/android-pro" "com.crane.hello" "Hello") (execute-extended-command nil "android-create-project") (find-file "/home/crane/workspace/oschina-android-app/src/net/oschina/app/AppConfig.java") (android-mode (quote toggle)) (execute-extended-command nil "android-mode") (find-file "/home/crane/.emacs.d/init-git.el") (speedbar nil) (execute-extended-command nil "speedbar") (ecb-activate) (execute-extended-command nil "ecb-activate") (execute-extended-command nil "package-install") (ecb-open-source-in-editwin1) (execute-extended-command nil "ecb-open-source-in-editwin1") (find-file "/home/crane/codes/shellscript/exeone.sh") (find-file "/home/crane/codes/shellscript/one.sh") (gnus nil) (execute-extended-command nil "gnus") (ibuffer-find-file "/home/crane/codes/shellscript" t) (find-file "/home/crane/codes/c-code/ConstMethod.cpp")))
(setq-default compile-history '("gcc test.c -o test" "gcc time.c -o time" "gcc -o time.c time" "gcc -o time.c time.out" "javac FirstJava.java" "javac"))
(setq-default dired-shell-command-history '("dired" "open"))
(setq-default extended-command-history '("eshell" "diminish" "list-packages" "load-file" "emdroid-create-activity" "android-ant-installd" "android-ant" "android-start-emulator" "android-create-project" "android-mode" "speedbar" "ecb-activate" "package-install" "ecb-open-source-in-editwin1" "gnus" "w3m" "replace-string" "comment-region" "comment-or-uncomment-region" "rename-buffer" "w3m-search" "doc-view-mode" "github-browse-file" "inferior-haskell-kind" "w3m-fb-mode" "w3m-goto-url" "w3m-download" "load-library" "java-mode" "js-beautify" "mouse-secondary-save-then-kill" "dired" "compile" "format-find-file" "find-file" "gdb" "c-mode" "gnus-score-mode" "color-theme-blue-gnus" "completion-list-mode" "jdb" "auto-compile-mode" "run-prolog" "diredp-dired-files" "cmake-mode" "info" "text-mode" "menu-bar-kill-ring-save"))
(setq-default global-mark-ring 'nil)
(setq-default gud-gdb-history '("gdb time" "gdb FirstJava"))
(setq-default gud-jdb-history '("jdb FirstJava" "jdb FirstJava.java"))
(setq-default helm-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar (quote prin1-to-string) command-history)) (type . sexp)))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-external-command-history '("deallocvt"))
(setq-default helm-ff-history '("/home/crane/.emacs.d/" "/home/crane/.emacs.d/elpa/" "/home/crane/android-pro/src/com/crane/hello/" "/home/crane/" "/home/crane/workspace/oschina-android-app/src/net/" "/home/crane/codes/shellscript/" "/home/crane/codes/" "/" "/home/crane/codes/c-code/" "/home/crane/codes/javacodes/" "/home/crane/简历/"))
(setq-default helm-source--ff-file-name-history '((name . "File name history") (init lambda nil (with-helm-alive-p (when helm-ff-file-name-history-use-recentf (require (quote recentf)) (or recentf-mode (recentf-mode 1))))) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda (candidate) (helm-set-pattern (expand-file-name candidate)) (with-helm-after-update-hook (helm-exit-minibuffer))) ("Find file in helm" lambda (candidate) (helm-set-pattern (expand-file-name candidate))))))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar (quote prin1-to-string) command-history)) (type . sexp)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default ido-buffer-history '("network.sh" "policykit.sh" "justtest.cpp" "time.c"))
(setq-default ido-file-history '("mode-line-awesome.el" "diminish.el" "init.el" "init-modeline.el" ".emacs.d/" "应聘Android开发工程师岗位_黄仁鹤_华中科技大学_15527838254.txt" "emdroid.el" "Hello.java" "android-mode.el" nil "java-mode-indent-annotations.el" "main.xml" "AppConfig.java" "init-git.el" "exeone.sh" "one.sh" "ConstMethod.cpp" "init-gnus.el" "network.sh" "exmaple.js" ".authinfo.gpg" "init-gud.el" "policykit.sh" "helloworld.sh" ".emacs-places" "firstshell.sh" "JNI.pdf" "helloworld.py" "init-web-mode.el" "helloWorld.java" "HelloWorld.java" ".emacs" "consttest.cpp" "AnimalManager.cpp" "ArgsInMain.cpp" "ObjectTest.java" "FirstJava.java" "justtest.cpp" "iosecond.cpp" "ioone.cpp" "README.org" "virtualcon.cpp" "virtualTest.cpp" "download.sh" "extends.cpp" "Rational.cpp" "new.cpp" "childobject.cpp" "constmemeber.cpp" "input.cpp" "helloworld.cpp"))
(setq-default minibuffer-history '("all" "/home/crane/.emacs.d/" "info" "/home/crane/.emacs.d/dimi" "Hello" "/home/crane/.emacs.d/emdo" "/home/crane/.emacs.d/emdroi" "hello" "/home/crane/.emacs.d/emdroid" "Crane" "HelloWorld" "/home/crane/.emacs.d/em" "/home/crane/.emacs.d/elpa/andr" "/home/crane/android-pro/src/com/crane/hello/" "debug install" "crane" "" "com.crane.hello" "/home/crane/android-pr" "/home/crane/workspace/oschina-android-app/src/net/oschina/" "/home/crane/codes/shell" "renhehuang" "zhenshi henbucuo le " "/home/crane/.emacs.d/init-emac" "exec-path" "w3m" "/home/crane/codes/c-code/objectLife.cpp" "/home/crane/codes/c-code/" "/home/crane/codes/c" "/home/crane/codes/c-dode" "ansi-color-faces-vector" "/home/crane/codes/javacodes/" "/home/crane/codes/javacodes" "/home/crane/re" "/home/crane/简历/" "root" "ls" "o=rwx" "/home/crane/codes/c-code" "/home/crane/codes" "/home/crane/" "/home/crane/codes/" "/home"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default query-replace-history '("renhe940318" "username" "altered" "changed"))
(setq-default serial-name-history '("/dev/ttyS0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("cd codes" "cd ~/home"))
(setq-default smex-history '(info cd 5x5 all arp dbx dig))
