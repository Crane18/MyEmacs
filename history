;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(minibuffer-history-search-history diminish-history-names diminish-history-symbols buffer-name-history ido-buffer-history gud-gdb-history compile-history dired-shell-command-history shell-command-history query-replace-history file-name-history minibuffer-history gud-jdb-history ido-file-history extended-command-history))
(setq diminish-history-names '("V"))
(setq diminish-history-symbols '("rainbow-delimiters-mode"))
(setq buffer-name-history '("*cider-repl crane-blog*" "article.clj" "*cider-repl crane-blog:53678*" "*cider-repl crane-blog:57630*" "*cider-repl crane-blog*" "*cider-repl ~*" "welcome.clj" "*cider-repl command-line-args*" "core_test.clj" "*eshell*" "linuxC.sh" "init-emacs-w3m.el" "network.sh" "policykit.sh" "crane" "node" "justtest.cpp" "time.c"))
(setq ido-buffer-history '("*cider-repl crane-blog*" "article.clj" "*cider-repl crane-blog:53678*" "*cider-repl crane-blog:57630*" "*cider-repl crane-blog*" "*cider-repl ~*" "welcome.clj" #("welcome.clj" 0 11 (face ido-virtual)) #("core.clj" 0 8 (face ido-virtual)) "*cider-repl command-line-args*" "core_test.clj" nil "linuxC.sh" "init-emacs-w3m.el" "network.sh" "policykit.sh" "justtest.cpp" "time.c"))
(setq gud-gdb-history '("gdb time" "gdb FirstJava"))
(setq compile-history '("gcc test.c -o test" "gcc time.c -o time" "gcc -o time.c time" "gcc -o time.c time.out" "javac FirstJava.java" "javac"))
(setq dired-shell-command-history '("dired" "open"))
(setq shell-command-history '("cd codes" "cd ~/home"))
(setq query-replace-history '("pro" "profiles" "GetStaticMethodID" "GetMethodID" "renhe940318" "username" "altered" "changed"))
(setq file-name-history '("/home/crane/.emacs.d/init.el" "/home/crane/crane-blog/src/crane_blog/views/article.clj" "/home/crane/.emacs.d/init.el" "~/.emacs.d/init.el" "/home/crane/.emacs-places" "/home/crane/crane-blog/src/crane_blog/views/login.clj" "/home/crane/crane-blog/src/crane_blog/views/common.clj" "~/.emacs.d/elpa/emmet-mode-1.0.10/emmet-mode-autoloads.el" "~/.emacs.d/elpa/rainbow-mode-0.10/rainbow-mode-autoloads.el" "/home/crane/.emacs.d/elpa/ac-cider-readme.txt" "/home/crane/crane-blog/src/crane_blog/views/welcome.clj" "~/crane-blog/src/crane_blog/views/welcome.clj" "/home/crane/.emacs.d/elpa/cljdoc-0.1.0/cljdoc.el" "/home/crane/.emacs.d/elpa/cljdoc-0.1.0/cljdoc-autoloads.el" "/media/crane/新加卷/workspace/OrderSystem/src/hust/groupwork/ordersys/frame/DishesManagerFrame.java" "~/command-line-args/src/command_line_args/core.clj" "/home/crane/command-line-args/test/command_line_args/core_test.clj" "/home/crane/command-line-args/src/command_line_args/core.clj" "/home/crane/command-line-args/project.clj" "~/.android/androidtool.cfg" "/home/crane/.android/androidtool.cfg" "/home/crane/.bashrc" "~/.bashrc" "~/.emacs.d/elpa/projectile-0.10.0/projectile-autoloads.el" "/home/crane/bin/lein" "~/.emacs.d/elpa/cider-0.5.0/cider-autoloads.el" "~/.emacs.d/elpa/pkg-info-0.5/pkg-info-autoloads.el" "~/.emacs.d/elpa/epl-0.7/epl-autoloads.el" "~/.emacs.d/elpa/clojure-mode-2.1.1/clojure-mode-autoloads.el" "/home/crane/codes/javacodes/Generics.java" "~/AndroidStudio/android-studio/bin/studio.sh" "/home/crane/codes/c-code/AnimalManager.cpp" "/home/crane/codes/c-code/VirtualBase.cpp" "/home/crane/codes/c-code/.#VirtualBase.cpp" "/home/crane/codes/c-code/staticlist.cpp" "/home/crane/codes/c-code/mypoint/tpoint1.cpp" "/home/crane/codes/c-code/mypoint/tpoint1.h" "/home/crane/codes/c-code/pointer.cpp" "~/codes/c-code/pointer.cpp" "/home/crane/codes/c-code/hash.c" "/home/crane/codes/c-code/TestOne.cpp" "/home/crane/codes/c-code/justtest.cpp" "/home/crane/codes/c-code/consttest.cpp" "/tmp/.fr-5aN0Ph/aliedit.sh" "/home/crane/codes/c-code/MyClass.cpp" "/home/crane/codes/javacodes/HeapOOM.java" "~/workspace/ApiDemos/README.txt" "/home/crane/android-dev-tools/app/kelvin/src/sg/nus/KelvinSungEX2/MainActivity.java" "/home/crane/android-dev-tools/app/KelvinSungEX2/AndroidManifest.xml" "/home/crane/android-dev-tools/app/kelvin/res/layout/select_image_fragment.xml" "/home/crane/android-dev-tools/app/Kelvin.apk" "/etc/hosts" \.\.\.))
(setq minibuffer-history '("/home/crane/.emacs.d/init.el" "crane-" "/home/crane/.android/androidtool.c" "/home/crane/.bashrc" "projectile" "cider" "clo" "version" "14" "/home/crane/codes/c-code/mypoint" "/home/crane/codes/c-code/point" "/home/crane/codes/javacodes/annotations" "/home/crane/Native" "/etc/apt/source.list" "/home/crane/codes/gradle" "141" "/etc/.bash" "c-outline-level" "/home/crane/codes/javacodes/Contructor" \.\.\.))
(setq gud-jdb-history '("javac Hello.java" "jdb FirstJava" "jdb FirstJava.java"))
(setq ido-file-history '("init.el" "article.clj" "init.el" ".emacs-places" "login.clj" "common.clj" "ac-cider-readme.txt" "welcome.clj" "cljdoc.el" "cljdoc-autoloads.el" "DishesManagerFrame.java" "core_test.clj" "core.clj" "project.clj" "androidtool.cfg" ".bashrc" "elpa/" "lein" "Generics.java" nil "AnimalManager.cpp" "VirtualBase.cpp" ".#VirtualBase.cpp" "staticlist.cpp" "tpoint1.cpp" "tpoint1.h" "pointer.cpp" "hash.c" "TestOne.cpp" "justtest.cpp" "consttest.cpp" "MyClass.cpp" "HeapOOM.java" "MainActivity.java" "AndroidManifest.xml" "select_image_fragment.xml" "Kelvin.apk" "hosts" "FirstJava.html" \.\.\.))
(setq extended-command-history '("load-file" "cider-version" "cider-mode" "package-list-packages" "auto-complete-mode" "cider-quit" "imenu" "cider-jack-in" "eshell" "package-install" "package-refresh-contents" "version" "package-list-packages-no-fetch" "goto-line" "mkdir" "mouse-secondary-save-then-kill" "shell" "save-buffers-kill-terminal" "make-directory" "replace-string" "Buffer-menu-this-window" \.\.\.))
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
(setq kill-ring '(#("defn " 0 5 (font-lock-face cider-repl-prompt-face)) #("(defpage \"\")
" 0 1 (fontified t) 1 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face fontified t) 11 12 (fontified t) 12 13 (fontified t)) #("(defpa)" 0 1 (fontified t) 1 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t)) #("defn" 0 4 (fontified t face font-lock-keyword-face)) #("(conj '(1 3 4) 4)
" 0 7 (fontified t) 7 13 (fontified t) 13 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) #("
" 0 1 (fontified t)) #("  (/ (apply + numbers) (count numbers)))
" 0 40 (fontified t) 40 41 (fontified t)) #("  [numbers]" 0 11 (fontified t)) #("(defn average" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 13 (fontified t face font-lock-function-name-face)) #("(average [23 43 434])" 0 21 (fontified t)) #("(defn average)
" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face font-lock-function-name-face fontified t symbol "v" document ac-cider-documentation popup-face ac-cider-candidate-face selection-face ac-cider-selection-face) 13 14 (fontified t) 14 15 (fontified t)) #("(defn average
" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face font-lock-function-name-face fontified t) 13 14 (fontified t)) #("  [numbers]" 0 11 (fontified t)) #("  (/ (apply + numbers) (count numbers)))
" 0 40 (fontified t) 40 41 (fontified t))))
